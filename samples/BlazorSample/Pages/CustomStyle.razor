@page "/custom"
@inject IModalService Modal
@layout CustomModalLayout

<h1>Blazored Modal Sample with Custom Styling</h1>

<hr class="mb-5" />

<p>
    A custom style can be set globally by adding the <var>Style</var> property on <code>BlazoredModal</code> like this:
</p>
<button @onclick="ShowModal" class="btn btn-primary">Show custom Modal</button>

<hr class="mb-5" />

<p>
    A custom style can also be set as a parameter on the <code>Modal.Show()</code> method.
</p>

<button @onclick="ShowModalCustomStyle" class="btn btn-primary">Show Modal styled as a prompt</button>

@code {

    async Task ShowModal()
    {
        var parameters = new ModalParameters();

        parameters.Add("FormId", 11);

        var signUpModal = Modal.Show<SignUpForm>("Sign Up Form", parameters);
        var result = await signUpModal.Result;

        ModalClosed(result);
    }

    async Task ShowModalCustomStyle()
    {
        var parameters = new ModalParameters();
        var options = new ModalOptions() { Class = "blazored-prompt-modal" };
        var confirmationModal = Modal.Show<YesNoPrompt>("Delete record?", options);
        var result = await confirmationModal.Result;

        ModalClosed(result);
    }


    void ModalClosed(ModalResult modalResult)
    {
        Console.WriteLine("Modal has closed");

        if (modalResult.Cancelled)
        {
            Console.WriteLine("Modal was Cancelled");
        }
        else
        {
            Console.WriteLine(modalResult.Data.ToString());
        }
    }

}

