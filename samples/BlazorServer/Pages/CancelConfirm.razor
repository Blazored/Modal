@page "/cancelconfirm"

<h1>Confirm before canceling a modal</h1>

<hr class="mb-5" />

<p>
    A confimation modal can be displayed when the modal is about to be canceled by setting <code>ConfimationOnCancelOptions</code> to a new instance of <code>ConfirmationModalOptions</code>.
    <br/>
    <br/>
    You can change the settings of the confirmation message using the following options: <br/>
    - <code>Title</code> to set the title of the confirmation <br/>
    - <code>Content</code> to set the content of the confirmation <br/>
    - <code>CloseButtonText</code> to set the text of the close button <br/>
    - <code>CancelButtonText</code> to set the text of the cancel button <br/>
    - <code>CloseButtonClass</code> to set the class of the close button <br/>
    - <code>CancelButtonClass</code> to set the class of the cancel button <br/>
    - <code>OtherOptions</code> to set the normal modal options
</p>

<div class="card mb-4">
    <h5 class="card-header">Setting on a per modal basis</h5>
    <div class="card-body">
        <p class="card-text" style="white-space: break-spaces;">
            <code>@(@"
var options = new ModalOptions
{
    ConfimationOnCancelOptions = new ConfirmationModalOptions()
    {
        Title = ""Are you sure!"",
        Content = ""Do you really want to cancel the modal"",
        CloseButtonText = ""Yes"",
        CancelButtonText = ""No"",
        CloseButtonClass = ""btn btn-primary"",
        CancelButtonClass = ""btn btn-secondary"",
        OtherOptions = new ModalOptions
        {
            DisableBackgroundCancel = true,
            HideCloseButton = true
        }
    }
};
Modal.Show<Confirm>(""Confirm Cancel"", options);
")</code>
        </p>
    </div>
</div>

<button @onclick="ShowDefaultCancelConfirm" class="btn btn-primary">Show modal with default confimation</button>
<button @onclick="ShowCustomCancelConfirm" class="btn btn-primary">Show modal with custom confimation</button>

@code {

    [CascadingParameter] public IModalService Modal { get; set; }

    void ShowDefaultCancelConfirm()
    {
        var options = new ModalOptions
        {
            ConfimationOnCancelOptions = new ConfirmationModalOptions()
        };
        Modal.Show<Confirm>("Confirm Cancel", options);
    }

    void ShowCustomCancelConfirm()
    {
        var options = new ModalOptions
        {
            ConfimationOnCancelOptions = new ConfirmationModalOptions()
            {
                Title = "Are you sure!",
                Content = "Do you really want to cancel the modal",
                CloseButtonText = "Yes",
                CancelButtonText = "No",
                CloseButtonClass = "btn btn-primary",
                CancelButtonClass = "btn btn-secondary",
                OtherOptions = new ModalOptions
                {
                    DisableBackgroundCancel = true,
                    HideCloseButton = true
                }
            }
        };
        Modal.Show<Confirm>("Confirm Cancel", options);
    }
}