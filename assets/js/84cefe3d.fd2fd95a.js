"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[709],{3131:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>r,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>d,toc:()=>i});var a=n(4848),t=n(8453);const l={sidebar_position:5},s="Multiple Modals",d={id:"usage/multiple-modals",title:"Multiple Modals",description:"It's possible to show multiple modals at the same time, however, each new modal needs to be shown from the currently active modal.",source:"@site/docs/usage/multiple-modals.md",sourceDirName:"usage",slug:"/usage/multiple-modals",permalink:"/Modal/usage/multiple-modals",draft:!1,unlisted:!1,editUrl:"https://github.com/blazored/modal/tree/main/docs/docs/usage/multiple-modals.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Closing Programmatically",permalink:"/Modal/usage/closing-programmatically"},next:{title:"Configuration",permalink:"/Modal/category/configuration"}},r={},i=[];function c(e){const o={code:"code",em:"em",h1:"h1",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.h1,{id:"multiple-modals",children:"Multiple Modals"}),"\n",(0,a.jsx)(o.p,{children:"It's possible to show multiple modals at the same time, however, each new modal needs to be shown from the currently active modal."}),"\n",(0,a.jsxs)(o.p,{children:["In the following example, ",(0,a.jsx)(o.code,{children:"ModalOne"})," is displayed from the ",(0,a.jsx)(o.code,{children:"Homepage"})," component."]}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-razor",metastring:'title="Homepage.razor"',children:'<button @onclick="ShowModal">Show Modal</button>\n\n@code {\n    [CascadingParameter] IModalService ModalService { get; set; } = default!;\n\n    private void ShowModal() => ModalService.Show<ModalOne>("First Modal");\n}\n'})}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.code,{children:"ModalOne"})," then has two buttons ",(0,a.jsx)(o.em,{children:"Show Modal Two"})," and ",(0,a.jsx)(o.em,{children:"Close"}),". Clicking ",(0,a.jsx)(o.em,{children:"Show Modal Two"})," will then create a second modal, ",(0,a.jsx)(o.code,{children:"ModalTwo"}),", which renders on top of ",(0,a.jsx)(o.code,{children:"ModalOne"}),"."]}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-razor",metastring:'title="ModalOne.razor"',children:'<h1>Modal One</h1>\n\n<button @onclick="ShowModalTwo">Show Modal Two</button>\n<button @onclick="Close">Close</button>\n\n@code {\n    [CascadingParameter] BlazoredModalInstance ModalOne { get; set; } = default!;\n    [CascadingParameter] IModalService ModalService { get; set; } = default!;\n\n    private async Task ShowModalTwo()\n    {\n        var modalTwo = ModalService.Show<ModalTwo>("Second Modal");\n        _ = await modalTwo.Result;\n\n        await ModalOne.CloseAsync();\n    }\n\n    private async Task Close() => await ModalOne.CloseAsync();\n}\n'})}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-csharp",metastring:'title="ModalTwo.razor"',children:'<h1>Modal Two</h1>\n\n<button @onclick="Close">Close</button>\n\n@code {\n    [CascadingParameter] BlazoredModalInstance ModalTwo { get; set; } = default!;\n\n    private async Task Close() => await ModalTwo.CloseAsync();\n}\n'})})]})}function m(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,a.jsx)(o,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>s,x:()=>d});var a=n(6540);const t={},l=a.createContext(t);function s(e){const o=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),a.createElement(l.Provider,{value:o},e.children)}}}]);